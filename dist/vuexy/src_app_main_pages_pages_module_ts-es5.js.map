{"version":3,"sources":["webpack:///src/app/main/pages/authentication/auth-login-v2/auth-login-v2.component.html","webpack:///src/app/main/pages/authentication/auth-login-v2/auth-login-v2.component.ts","webpack:///src/app/main/pages/authentication/authentication.module.ts","webpack:///src/app/main/pages/miscellaneous/error/error.component.ts","webpack:///src/app/main/pages/miscellaneous/error/error.component.html","webpack:///src/app/main/pages/miscellaneous/miscellaneous.module.ts","webpack:///src/app/main/pages/pages.module.ts"],"names":["AuthLoginV2Component","_coreConfigService","_formBuilder","_route","_router","fs","AuthService","document","loading","submitted","error","_unsubscribeAll","Subject","config","layout","navbar","hidden","menu","footer","customizer","enableLocalStorage","loginForm","controls","passwordTextType","invalid","email","value","password","loginByEmailPassword","then","e","localStorage","setItem","user","uid","getUserById","get","toPromise","data","currentUser","undefined","role","name","setTimeout","location","href","group","Validators","returnUrl","snapshot","queryParams","pipe","takeUntil","subscribe","coreConfig","next","complete","DOCUMENT","onSubmit","togglePasswordTextType","routes","path","component","animation","AuthenticationModule","CommonModule","RouterModule","NgbModule","FormsModule","ReactiveFormsModule","CoreCommonModule","ErrorComponent","MiscellaneousModule","PagesModule","ContentHeaderModule","NgSelectModule"],"mappings":"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","file":"src_app_main_pages_pages_module_ts-es5.js","sourcesContent":["<div class=\"auth-wrapper auth-v2\">\r\n    <div class=\"auth-inner row m-0\">\r\n        <!-- Brand logo-->\r\n        <a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n            <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n            <h2 class=\"brand-text text-primary ml-1\">\r\n                Management Information System\r\n            </h2>\r\n        </a>\r\n        <!-- /Brand logo-->\r\n        <!-- Left Text-->\r\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n            <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n                <img class=\"img-fluid\" [src]=\"\r\n            coreConfig.layout.skin === 'dark'\r\n              ? 'assets/images/pages/login-v2-dark.svg'\r\n              : 'assets/images/pages/login-v2.svg'\r\n          \" alt=\"Login V2\" />\r\n            </div>\r\n        </div>\r\n        <!-- /Left Text-->\r\n        <!-- Login-->\r\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n                <h2 class=\"card-title font-weight-bold mb-1\">\r\n                    Welcome to Management Information System ! 👋\r\n                </h2>\r\n                <p class=\"card-text mb-2\">Please sign-in to your account</p>\r\n\r\n                <ngb-alert [type]=\"'danger'\" [dismissible]=\"false\" *ngIf=\"error\">\r\n                    <div class=\"alert-body\">\r\n                        <p>{{ error }}</p>\r\n                    </div>\r\n                </ngb-alert>\r\n\r\n                <form class=\"auth-login-form mt-2\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"login-email\">Email</label>\r\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" placeholder=\"admin@demo.com\" aria-describedby=\"login-email\" autofocus=\"\" tabindex=\"1\" />\r\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                            <div *ngIf=\"f.email.errors.email\">\r\n                                Email must be a valid email address\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                            <label for=\"login-password\">Password</label\r\n              >\r\n              \r\n              <!-- <a routerLink=\"/pages/authentication/forgot-password-v2\"\r\n                ><small>Forgot Password?</small></a\r\n              > -->\r\n            </div>\r\n            <div class=\"input-group input-group-merge form-password-toggle\">\r\n              <input\r\n                [type]=\"passwordTextType ? 'text' : 'password'\"\r\n                formControlName=\"password\"\r\n                class=\"form-control form-control-merge\"\r\n                [ngClass]=\"{\r\n                  'is-invalid error': submitted && f.password.errors\r\n                }\"\r\n                placeholder=\"············\"\r\n                aria-describedby=\"login-password\"\r\n                tabindex=\"2\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text cursor-pointer\"\r\n                  ><i\r\n                    class=\"feather font-small-4\"\r\n                    [ngClass]=\"{\r\n                      'icon-eye-off': passwordTextType,\r\n                      'icon-eye': !passwordTextType\r\n                    }\"\r\n                    (click)=\"togglePasswordTextType()\"\r\n                  ></i\r\n                ></span>\r\n              </div>\r\n            </div>\r\n            <div\r\n              *ngIf=\"submitted && f.password.errors\"\r\n              class=\"invalid-feedback\"\r\n              [ngClass]=\"{ 'd-block': submitted && f.password.errors }\"\r\n            >\r\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"custom-control custom-checkbox\">\r\n              <input\r\n                class=\"custom-control-input\"\r\n                id=\"remember-me\"\r\n                type=\"checkbox\"\r\n                tabindex=\"3\"\r\n              />\r\n              <label class=\"custom-control-label\" for=\"remember-me\">\r\n                Remember Me</label\r\n              >\r\n            </div>\r\n          </div>\r\n          <button\r\n            [disabled]=\"loading\"\r\n            class=\"btn btn-primary btn-block\"\r\n            tabindex=\"4\"\r\n            rippleEffect\r\n          >\r\n            <span\r\n              *ngIf=\"loading\"\r\n              class=\"spinner-border spinner-border-sm mr-1\"\r\n            ></span\r\n            >Sign in\r\n          </button>\r\n        </form>\r\n        <!-- <p class=\"text-center mt-2\">\r\n          <span>New on our platform?</span\r\n          ><a routerLink=\"/pages/authentication/register-v2\"\r\n            ><span>&nbsp;Create an account</span></a\r\n          >\r\n        </p> -->\r\n        <!-- <div class=\"divider my-2\">\r\n          <div class=\"divider-text\">or</div>\r\n        </div>\r\n        <div class=\"auth-footer-btn d-flex justify-content-center\">\r\n          <a class=\"btn btn-facebook\" href=\"javascript:void(0)\"\r\n            ><i data-feather=\"facebook\"></i></a\r\n          ><a class=\"btn btn-twitter white\" href=\"javascript:void(0)\"\r\n            ><i data-feather=\"twitter\"></i></a\r\n          ><a class=\"btn btn-google\" href=\"javascript:void(0)\"\r\n            ><i data-feather=\"mail\"></i></a\r\n          ><a class=\"btn btn-github\" href=\"javascript:void(0)\"\r\n            ><i data-feather=\"github\"></i\r\n          ></a>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n    <!-- /Login-->\r\n  </div>\r\n</div>","import { Component, Inject, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { AuthService } from \"../../../../auth/service/authservice\";\r\nimport { firebaseStoreService } from '../../../../auth/service/firebasestoreservice';\r\nimport { DOCUMENT } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-auth-login-v2\",\r\n  templateUrl: \"./auth-login-v2.component.html\",\r\n  styleUrls: [\"./auth-login-v2.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AuthLoginV2Component implements OnInit {\r\n  //  Public\r\n  public coreConfig: any;\r\n  public loginForm: FormGroup;\r\n  public loading = false;\r\n  public submitted = false;\r\n \r\n  public returnUrl: string;\r\n  public error = \"\";\r\n  public passwordTextType: boolean;\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: FormBuilder,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    public fs:firebaseStoreService,\r\n    public AuthService: AuthService,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    const email = this.loginForm.controls[\"email\"].value;\r\n    const password = this.loginForm.controls[\"password\"].value;\r\n    this.loading = true;\r\n    this.AuthService.loginByEmailPassword(email, password)\r\n      .then(async (e) => {\r\n        // Login\r\n        debugger;\r\n      //  var currentUser = (await this.fs.getcurrentEmployee(e.user.uid).get().toPromise()).data();\r\n        localStorage.setItem('currentUser', e.user.uid);\r\n      var currentUser = await (await this.fs.getUserById(e.user.uid).get().toPromise()).data();\r\n      if(currentUser != undefined)\r\n      {\r\n        localStorage.setItem('role',currentUser.role);\r\n        localStorage.setItem('name',currentUser.name);\r\n      } \r\n\r\n        \r\n        setTimeout(() => {\r\n          this.document.location.href=\"/\";\r\n        // redirect to home page\r\n        }, 1000);\r\n      })\r\n      .catch((e) => {\r\n        this.loading = false;\r\n        this.error = e;\r\n      });\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.loginForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", Validators.required],\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this._route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { CoreCommonModule } from '@core/common.module';\r\n\r\nimport { AuthLoginV2Component } from 'app/main/pages/authentication/auth-login-v2/auth-login-v2.component';\r\n\r\n// routing\r\nconst routes: Routes = [\r\n  {\r\n    path: 'authentication/login-v2',\r\n    component: AuthLoginV2Component,\r\n    data: { animation: 'auth' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [AuthLoginV2Component],\r\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, FormsModule, ReactiveFormsModule, CoreCommonModule]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { CoreConfigService } from '@core/services/config.service';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n  public coreConfig: any;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   */\r\n  constructor(private _coreConfigService: CoreConfigService) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true\r\n        },\r\n        footer: {\r\n          hidden: true\r\n        },\r\n        menu: {\r\n          hidden: true\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false\r\n      }\r\n    };\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config.pipe(takeUntil(this._unsubscribeAll)).subscribe(config => {\r\n      this.coreConfig = config;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n}\r\n","<!-- Error page-->\r\n<div class=\"misc-wrapper\">\r\n  <a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n    <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n    <h2 class=\"brand-text text-primary ml-1\">Vuexy</h2></a\r\n  >\r\n  <div class=\"misc-inner p-2 p-sm-3\">\r\n    <div class=\"w-100 text-center\">\r\n      <h2 class=\"mb-1\">Page Not Found 🕵🏻‍♀️</h2>\r\n      <p class=\"mb-2\">Oops! 😖 The requested URL was not found on this server.</p>\r\n      <a class=\"btn btn-primary mb-2 btn-sm-block\" routerLink=\"/\" rippleEffect>Back to Home</a\r\n      ><img\r\n        class=\"img-fluid\"\r\n        [src]=\"\r\n          coreConfig.layout.skin === 'dark' ? 'assets/images/pages/error-dark.svg' : 'assets/images/pages/error.svg'\r\n        \"\r\n        alt=\"Error page\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- / Error page-->\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreCommonModule } from '@core/common.module';\r\n\r\nimport { ErrorComponent } from 'app/main/pages/miscellaneous/error/error.component';\r\n\r\n// routing\r\nconst routes: Routes = [\r\n  {\r\n    path: 'miscellaneous/error',\r\n    component: ErrorComponent,\r\n    data: { animation: 'misc' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ErrorComponent],\r\n  imports: [CommonModule, RouterModule.forChild(routes), CoreCommonModule]\r\n})\r\nexport class MiscellaneousModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { CoreCommonModule } from '@core/common.module';\r\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\r\n\r\nimport { AuthenticationModule } from './authentication/authentication.module';\r\nimport { MiscellaneousModule } from './miscellaneous/miscellaneous.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    CoreCommonModule,\r\n    ContentHeaderModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    AuthenticationModule,\r\n    MiscellaneousModule\r\n  ],\r\n\r\n  providers: []\r\n})\r\nexport class PagesModule {}\r\n"]}